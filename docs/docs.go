// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/leagues": {
            "post": {
                "description": "Create a new league with the provided name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Create a new league",
                "parameters": [
                    {
                        "description": "League information",
                        "name": "league",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreateLeagueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.League"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}": {
            "get": {
                "description": "Get a specific league by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Get a league by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "League ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.League"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/predict": {
            "get": {
                "description": "Predict the final standings for a league after all weeks are played",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "predictions"
                ],
                "summary": "Predict final standings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "League ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Standings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/predictions": {
            "get": {
                "description": "Get comprehensive predictions with probabilities and confidence levels (available after week 4)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "predictions"
                ],
                "summary": "Get detailed predictions with confidence levels",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "League ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PredictionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/simulate": {
            "post": {
                "description": "Simulate all matches for the next week in the league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Simulate a week of matches",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "League ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Standings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/simulate-all": {
            "post": {
                "description": "Liga bitene kadar otomatik olarak tüm haftaları simüle eder",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Tüm kalan haftaları simüle et",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Liga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LeagueSimulationResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/standings": {
            "get": {
                "description": "Get the current standings for a league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Get current standings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "League ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Standings"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/leagues/{id}/weeks/{week}/matches": {
            "get": {
                "description": "Ligada belirli bir haftanın tüm maçlarını getir",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "leagues"
                ],
                "summary": "Belirli bir haftanın maçlarını getir",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Liga ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Hafta numarası",
                        "name": "week",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches": {
            "get": {
                "description": "Get a list of all matches or matches for a specific week",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Get all matches",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Week number",
                        "name": "week",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new match with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Create a new match",
                "parameters": [
                    {
                        "description": "Match information",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches/{id}": {
            "get": {
                "description": "Get a specific match by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Get a match by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a match with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "matches"
                ],
                "summary": "Update a match",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Match information",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "description": "Get a list of all teams in the league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Get all teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Team"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new team with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create a new team",
                "parameters": [
                    {
                        "description": "Team information",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Team"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams/initialize": {
            "post": {
                "description": "Create the initial 4 teams for the league",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Create initial teams",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Team"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/teams/{id}": {
            "get": {
                "description": "Get a specific team by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Get a team by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a team with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Update a team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team information",
                        "name": "team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Team"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Team"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a team by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teams"
                ],
                "summary": "Delete a team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controller.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.CreateLeagueRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "controller.SuccessResponse": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "model.League": {
            "type": "object",
            "properties": {
                "current_week": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "matches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Match"
                    }
                },
                "name": {
                    "type": "string"
                },
                "standings": {
                    "$ref": "#/definitions/model.Standings"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Team"
                    }
                },
                "total_weeks": {
                    "type": "integer"
                }
            }
        },
        "model.LeagueSimulationResult": {
            "type": "object",
            "properties": {
                "ending_week": {
                    "description": "Bitiş haftası",
                    "type": "integer"
                },
                "final_standings": {
                    "description": "Final puan tablosu",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Standings"
                        }
                    ]
                },
                "league_id": {
                    "description": "Liga ID'si",
                    "type": "integer"
                },
                "starting_week": {
                    "description": "Başlangıç haftası",
                    "type": "integer"
                },
                "weekly_results": {
                    "description": "Haftalık sonuçlar",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WeeklyResult"
                    }
                }
            }
        },
        "model.Match": {
            "type": "object",
            "properties": {
                "away_score": {
                    "type": "integer"
                },
                "away_team": {
                    "$ref": "#/definitions/model.Team"
                },
                "away_team_id": {
                    "type": "integer"
                },
                "home_score": {
                    "type": "integer"
                },
                "home_team": {
                    "$ref": "#/definitions/model.Team"
                },
                "home_team_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "played": {
                    "type": "boolean"
                },
                "played_at": {
                    "type": "string"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "model.MatchResult": {
            "type": "object",
            "properties": {
                "away_score": {
                    "description": "Deplasman skoru",
                    "type": "integer"
                },
                "away_team": {
                    "description": "Deplasman takımı",
                    "type": "string"
                },
                "home_score": {
                    "description": "Ev sahibi skoru",
                    "type": "integer"
                },
                "home_team": {
                    "description": "Ev sahibi takım",
                    "type": "string"
                },
                "match_id": {
                    "description": "Maç ID'si",
                    "type": "integer"
                },
                "played_at": {
                    "description": "Oynanma zamanı",
                    "type": "string"
                },
                "result": {
                    "description": "Sonuç (Win/Draw/Loss)",
                    "type": "string"
                }
            }
        },
        "model.PredictionResult": {
            "type": "object",
            "properties": {
                "confidence_percentage": {
                    "description": "Güven yüzdesi",
                    "type": "number"
                },
                "current_week": {
                    "description": "Şu anki hafta",
                    "type": "integer"
                },
                "predicted_standings": {
                    "description": "Tahmini puan tablosu",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Standings"
                        }
                    ]
                },
                "prediction_type": {
                    "description": "Tahmin türü",
                    "type": "string"
                },
                "team_predictions": {
                    "description": "Takım bazlı tahminler",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TeamPrediction"
                    }
                },
                "total_weeks": {
                    "description": "Toplam hafta sayısı",
                    "type": "integer"
                }
            }
        },
        "model.Standings": {
            "type": "object",
            "properties": {
                "teams": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TeamStanding"
                    }
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "model.Team": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "strength": {
                    "description": "1-100 scale representing team's strength",
                    "type": "integer"
                }
            }
        },
        "model.TeamPrediction": {
            "type": "object",
            "properties": {
                "championship_probability": {
                    "description": "Şampiyonluk olasılığı",
                    "type": "number"
                },
                "current_points": {
                    "description": "Şu anki puanı",
                    "type": "integer"
                },
                "most_likely_position": {
                    "description": "En olası sıralaması",
                    "type": "integer"
                },
                "predicted_points": {
                    "description": "Tahmini final puanı",
                    "type": "integer"
                },
                "relegation_probability": {
                    "description": "Küme düşme olasılığı",
                    "type": "number"
                },
                "team_id": {
                    "description": "Takım ID'si",
                    "type": "integer"
                },
                "team_name": {
                    "description": "Takım adı",
                    "type": "string"
                },
                "top_three_probability": {
                    "description": "İlk 3'e girme olasılığı",
                    "type": "number"
                }
            }
        },
        "model.TeamStanding": {
            "type": "object",
            "properties": {
                "draws": {
                    "type": "integer"
                },
                "goal_difference": {
                    "type": "integer"
                },
                "goals_against": {
                    "type": "integer"
                },
                "goals_for": {
                    "type": "integer"
                },
                "losses": {
                    "type": "integer"
                },
                "played": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                },
                "team_name": {
                    "type": "string"
                },
                "wins": {
                    "type": "integer"
                }
            }
        },
        "model.WeeklyResult": {
            "type": "object",
            "properties": {
                "matches": {
                    "description": "O haftanın maçları",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.MatchResult"
                    }
                },
                "standings_after": {
                    "description": "Hafta sonrası puan durumu",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Standings"
                        }
                    ]
                },
                "standings_before": {
                    "description": "Hafta öncesi puan durumu",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Standings"
                        }
                    ]
                },
                "week": {
                    "description": "Hangi hafta",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http"},
	Title:            "Football League Simulator API",
	Description:      "API for simulating a football league with 4 teams",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
